--------------------------------
CREATE TABLE MEMBERS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MEMBER_ID  VARCHAR2(16),
TIER_CODE  VARCHAR2(5),
MEMBER_TYPE  VARCHAR2(10),
STATUS  VARCHAR2(10),
PREFIX  VARCHAR2(30),
NAME  VARCHAR2(50),
MIDDLE_NAME  VARCHAR2(50),
SURNAME  VARCHAR2(50),
MAIDEN_NAME  VARCHAR2(50),
NAME_ON_CARD  VARCHAR2(50),
CARD_ISSUE_DATE  VARCHAR2(21),
CARD_EXPIRE_DATE  VARCHAR2(21),
MILES_BALANCE  VARCHAR2(22),
TOTAL_MILES_SINCE_ENROLMENT  VARCHAR2(22),
CARD_IN_PROGRESS  VARCHAR2(5),
CARD_IN_PROGRESS_SWITCH_DATE  VARCHAR2(21),
LIFETIME_CARD_UNTIL  VARCHAR2(21),
EXPIRE_DATE_ON_CARD  VARCHAR2(21),
PIN_NUMBER  VARCHAR2(200),
GENDER  VARCHAR2(1),
BIRTH_DATE  VARCHAR2(21),
PLACE_OF_BIRTH  VARCHAR2(100),
MARITAL_STATUS  VARCHAR2(1),
MARRIAGE_DATE  VARCHAR2(21),
START_DATE  VARCHAR2(21),
NATIONALITY  VARCHAR2(2),
COMM_LANGUAGE  VARCHAR2(2),
PASSPORT_NUMBER  VARCHAR2(20),
PASSPORT_EXPIRY_DATE  VARCHAR2(21),
SOCIAL_SECURITY_NO  VARCHAR2(25),
SOURCE_CODE  VARCHAR2(16),
REFERENCE_CODE  VARCHAR2(16),
REFERRING_MEMBER_ID  VARCHAR2(16),
OLD_ID  VARCHAR2(16),
NOTE_FOR_DCS  VARCHAR2(255),
NEW_CARD_SEND_DATE  VARCHAR2(21),
CONSENT_MAIL_FFP_DEPARTMENT  VARCHAR2(1),
CONSENT_MAIL_PARTNER  VARCHAR2(1),
CONSENT_EMAIL_FFP_DEPARTMENT  VARCHAR2(1),
CONSENT_EMAIL_PARTNER  VARCHAR2(1),
CONSENT_ESTATEMENT  VARCHAR2(1),
CONSENT_SMS  VARCHAR2(1),
DUP_CHECK  VARCHAR2(1),
CONSENT_FAX  VARCHAR2(1),
TEST_MEMBER  VARCHAR2(1),
EMAIL_VALIDATION  VARCHAR2(1),
EMAIL_VALIDATION_DATE  VARCHAR2(21),
EMAIL_VALIDATION_TEXT  VARCHAR2(100),
TAGGED_AS  VARCHAR2(10),
CONSENT_TRANSFER_INFORMATION  VARCHAR2(1),
SALUTATION  VARCHAR2(100),
CORPORATE_CODE  VARCHAR2(10),
MARKETING_OWNER_ID  VARCHAR2(22),
REMARKS  VARCHAR2(4000),
SUB_PROGRAM_CODE  VARCHAR2(3),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
REPLICA_TS  VARCHAR2(21),
SPOUSE_ID  VARCHAR2(16)
);
--------------------------------
CREATE TABLE TRAVEL_COORDINATOR ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(16),
MEMBER_ID  VARCHAR2(16),
GRANT_LEVEL  VARCHAR2(1),
PREFIX  VARCHAR2(10),
NAME  VARCHAR2(50),
SURNAME  VARCHAR2(50),
ADDRESS_LINE_1  VARCHAR2(30),
HOME_STATE  VARCHAR2(30),
HOME_ZIP_CODE  VARCHAR2(10),
HOME_CITY  VARCHAR2(30),
HOME_COUNTRY  VARCHAR2(30),
E_MAIL  VARCHAR2(100),
LOCAL_PREFIX  VARCHAR2(10),
LOCAL_NAME  VARCHAR2(25),
LOCAL_MIDDLE_NAME  VARCHAR2(25),
LOCAL_SURNAME  VARCHAR2(25),
ADDRESS_LINE_2  VARCHAR2(30),
ADDRESS_LINE_3  VARCHAR2(30),
BIRTH_DATE  VARCHAR2(21),
PASSPORT_NUMBER  VARCHAR2(20),
HOME_TEL_COUNTRY  VARCHAR2(5),
HOME_TEL_AREA  VARCHAR2(10),
HOME_TEL_NUMBER  VARCHAR2(30),
MOBILE_TEL_COUNTRY  VARCHAR2(5),
MOBILE_TEL_AREA  VARCHAR2(10),
MOBILE_TEL_NUMBER  VARCHAR2(30),
MIDDLE_NAME  VARCHAR2(50),
BUSS_TEL_COUNTRY  VARCHAR2(5),
BUSS_TEL_AREA  VARCHAR2(10),
BUSS_TEL_NUMBER  VARCHAR2(30),
BUSS_TEL_EXTENTION  VARCHAR2(10),
BUSS_FAX_COUNTRY  VARCHAR2(5),
BUSS_FAX_AREA  VARCHAR2(10),
BUSS_FAX_NUMBER  VARCHAR2(30),
RELATION  VARCHAR2(1),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
NOTES  VARCHAR2(3000),
TRAVEL_AGENT_CODE  VARCHAR2(11),
TRAVEL_AGENT_NAME  VARCHAR2(100),
USERNAME  VARCHAR2(100),
STATUS  VARCHAR2(2),
REPLICA_TS  VARCHAR2(21)
);
--------------------------------
CREATE TABLE ADDRESS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(22),
MEMBER_ID  VARCHAR2(16),
ZIP_CODE  VARCHAR2(20),
CITY  VARCHAR2(100),
STATE  VARCHAR2(100),
COUNTRY  VARCHAR2(30),
LANGUAGE  VARCHAR2(2),
TYPE  VARCHAR2(3),
STATUS  VARCHAR2(1),
PREFERRED  VARCHAR2(1),
ADDRESS_LINE_1  VARCHAR2(100),
ADDRESS_LINE_2  VARCHAR2(100),
ADDRESS_LINE_3  VARCHAR2(100),
JOB_TITLE  VARCHAR2(100),
DEPARTMENT  VARCHAR2(100),
COMPANY  VARCHAR2(100),
POST_OFFICE_BOX  VARCHAR2(8),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE EMAIL ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(22),
FLYER_ID  VARCHAR2(16),
EMAIL_ADDRESS  VARCHAR2(100),
TYPE  VARCHAR2(3),
STATUS  VARCHAR2(1),
PREFERRED  VARCHAR2(1),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE PHONE ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(22),
FLYER_ID  VARCHAR2(16),
INTERNATIONAL_CODE  VARCHAR2(5),
AREA_CODE  VARCHAR2(10),
CONTACT_NUMBER  VARCHAR2(100),
EXTENSION  VARCHAR2(10),
TYPE  VARCHAR2(3),
STATUS  VARCHAR2(1),
PREFERRED  VARCHAR2(1),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
NOTES  VARCHAR2(1000)
);
--------------------------------
CREATE TABLE MEMBER_OPTION_SELECTIONS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(16),
PREFERENCE_TYPE  VARCHAR2(16),
VALUE  VARCHAR2(10),
INSERTED_BY  VARCHAR2(50),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE CARD_HISTORY ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MEMBER_ID  VARCHAR2(16),
OP_DATE  VARCHAR2(21),
CURRENT_TIER  VARCHAR2(5),
PREV_TIER  VARCHAR2(5),
PREV_QUALIFYING_MILES  VARCHAR2(22),
PREV_QUALIFYING_SECTORS  VARCHAR2(22),
PREV_TOTAL_MILES  VARCHAR2(22),
PREV_TOTAL_MILES_SINCE_ENR  VARCHAR2(22),
REASON  VARCHAR2(150),
AUTHORIZING_PERSON  VARCHAR2(30),
IS_FULFILMENT_NEEDED  VARCHAR2(1),
QUALIFIED_ACTIVITY_START_DATE  VARCHAR2(21),
QUALIFIED_ACTIVITY_END_DATE  VARCHAR2(21),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
CARD_NUMBER  VARCHAR2(20),
CARD_HOLDER_NAME  VARCHAR2(50),
CARD_ISSUANCE_DATE  VARCHAR2(10),
CARD_EXPIRY_DATE  VARCHAR2(10),
CARD_MAGNETIC_STRIPE  VARCHAR2(100),
CARD_FULFILLMENT_STATUS  VARCHAR2(20)
);
--------------------------------
CREATE TABLE COBRAND_SUBSCRIPTION ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ACCT_SEQ  VARCHAR2(22),
OWNER  VARCHAR2(16),
ACCT_NO  VARCHAR2(50),
COMPANY  VARCHAR2(10),
START_DATE  VARCHAR2(10),
ACCOUNT_TYPE  VARCHAR2(10),
INSERTED_BY  VARCHAR2(50),
INSERT_DATE  VARCHAR2(10),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(10),
ACTIVE  VARCHAR2(1),
CLOSE_DATE  VARCHAR2(10),
MASKED_CREDIT_CARD_NO  VARCHAR2(16),
ACCOUNT_HOLDER_INFO  VARCHAR2(500)
);
--------------------------------
CREATE TABLE RELATIONSHIP_MASTER ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ISN  VARCHAR2(16),
RELATIONSHIP_TYPE_ISN  VARCHAR2(16),
HEAD_MEMBER_ID  VARCHAR2(16),
INSERT_DATE  VARCHAR2(21),
INSERTED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
STATUS  VARCHAR2(2)
);
--------------------------------
CREATE TABLE RELATIONSHIP_DETAIL ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ISN  VARCHAR2(16),
RELATIONSHIP_MASTER_ISN  VARCHAR2(16),
SUB_MEMBER_ID  VARCHAR2(16),
START_DATE  VARCHAR2(21),
END_DATE  VARCHAR2(3),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
RELATIONSHIP_SUB_TYPE_ISN  VARCHAR2(16),
STATUS  VARCHAR2(2),
ACCEPTANCE_DATE  VARCHAR2(21),
APPROVAL_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE MERGE_POINTERS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MERGE_SEQ  VARCHAR2(22),
FROM_ID  VARCHAR2(16),
TO_ID  VARCHAR2(16),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
REPLICA_TS  VARCHAR2(21)
);
--------------------------------
CREATE TABLE DE_MERGE_POINTERS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MERGE_ISN  VARCHAR2(22),
MERGED_ACCOUNT_ID  VARCHAR2(16),
ACTIVE_ACCOUNT_ID  VARCHAR2(16),
OPERATION_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE ACTIVITY ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ACT_SEQ  VARCHAR2(22),
MEMBER_ID  VARCHAR2(16),
TIER  VARCHAR2(5),
ACTIVITY_TYPE  VARCHAR2(1),
ACTIVITY_DATE  VARCHAR2(21),
COMPANY  VARCHAR2(10),
ACTIVITY_CLASSIFICATION  VARCHAR2(10),
AWARD_MILES  VARCHAR2(22),
QUALIFYING_MILES  VARCHAR2(22),
QUALIFYING_SECTORS  VARCHAR2(22),
DEFINITION  VARCHAR2(100),
STATUS  VARCHAR2(2),
ORIGIN  VARCHAR2(3),
DESTINATION  VARCHAR2(3),
BOOKING_CLASS  VARCHAR2(1),
FLOWN_CLASS  VARCHAR2(1),
FLT_NUMBER  VARCHAR2(7),
PNR  VARCHAR2(6),
TICKET_NUMBER  VARCHAR2(35),
BILLING_BASE  VARCHAR2(22),
BILLING_BONUS  VARCHAR2("22),
EXPLANATION  VARCHAR2("),
CUT_DATE  VARCHAR2("255),
ENTRY_TYPE  VARCHAR2("),
PARTNER_SEQ  VARCHAR2("21),
COUPON_FARE  VARCHAR2("),
EXPIRE_PROCESSED  VARCHAR2(1),
EXPIRE_DATE  VARCHAR2(20),
BOOKING_DATE  VARCHAR2(22),
BOOKING_OFFICE_ID  VARCHAR2(1),
TRANSACTION_FLYER_ID  VARCHAR2(21),
TRANSACTION_ACTIVITY_SEQ  VARCHAR2(21),
MERGED_MEMBER_ID  VARCHAR2(25),
PAX_NAME  VARCHAR2(16),
TRANSACTION_LOCATION  VARCHAR2(22),
SALES_VALUES  VARCHAR2(16),
CHECKIN_DATE  VARCHAR2(60),
CHECKOUT_DATE  VARCHAR2(100),
ADJUSTMENT_CODE  VARCHAR2(22),
REV_ACC_PROCESS_DATE  VARCHAR2(21),
INVOICED  VARCHAR2(21),
USER_NAME  VARCHAR2(10),
ENTRY_TIME  VARCHAR2(21),
IS_TRANSFERRED  VARCHAR2(1),
USED_ALL  VARCHAR2(30),
PROMOTION_CODE  VARCHAR2(21),
USED_POINTS  VARCHAR2(1),
CORRECTION_DONE  VARCHAR2(1),
CORRECTION_ACT_SEQ  VARCHAR2(30),
SALES_AGENT_ID  VARCHAR2(22),
INSERTED_BY  VARCHAR2(1),
INSERT_DATE  VARCHAR2(22),
AMENDED_BY  VARCHAR2(25),
AMEND_DATE  VARCHAR2(20),
FARE_BASIS  VARCHAR2(21),
BILLABLE_PARTNER  VARCHAR2(20),
CODE_SHARE_FLIGHT  VARCHAR2(21),
RETRO_ADJUSTED_FLIGHT_SEQ  VARCHAR2(50),
BILLING_AMOUNT  VARCHAR2(3),
BILLING_CURRENCY  VARCHAR2(7),
BILLING_COEFFICIENT  VARCHAR2(22)
);
--------------------------------
CREATE TABLE MEMBER_AWD ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
ID  VARCHAR2(22),
MEMBER_ID  VARCHAR2(16),
AWD_CODE  VARCHAR2(10),
AWD_DEFINITION  VARCHAR2(255),
AWD_COMPANY  VARCHAR2(10),
REFUND_DATE  VARCHAR2(21),
ISSUE_DATE  VARCHAR2(21),
REDEEMED_MILES  VARCHAR2(22),
STATUS  VARCHAR2(2),
CUT_DATE  VARCHAR2(21),
MEMBER_TIER  VARCHAR2(5),
PRINTED  VARCHAR2(1),
AWARDUSAGETYPE  VARCHAR2(1),
USERNAME  VARCHAR2(20),
EXPLANATION  VARCHAR2(255),
STEP1_COMPANY  VARCHAR2(10),
STEP1_FLIGHT_DATE  VARCHAR2(21),
STEP1_FLIGHT_NUMBER  VARCHAR2(10),
STEP1_BOOKING_CLASS  VARCHAR2(1),
STEP1_ORIGIN  VARCHAR2(10),
STEP1_DESTINATION  VARCHAR2(10),
STEP1_TICKET_NUMBER  VARCHAR2(15),
STEP2_COMPANY  VARCHAR2(10),
STEP2_FLIGHT_DATE  VARCHAR2(21),
STEP2_FLIGHT_NUMBER  VARCHAR2(10),
STEP2_BOOKING_CLASS  VARCHAR2(1),
STEP2_ORIGIN  VARCHAR2(10),
STEP2_DESTINATION  VARCHAR2(10),
STEP2_TICKET_NUMBER  VARCHAR2(15),
STEP3_COMPANY  VARCHAR2(10),
STEP3_FLIGHT_DATE  VARCHAR2(21),
STEP3_FLIGHT_NUMBER  VARCHAR2(10),
STEP3_BOOKING_CLASS  VARCHAR2(1),
STEP3_ORIGIN  VARCHAR2(10),
STEP3_DESTINATION  VARCHAR2(10),
STEP3_TICKET_NUMBER  VARCHAR2(15),
STEP4_COMPANY  VARCHAR2(10),
STEP4_FLIGHT_DATE  VARCHAR2(21),
STEP4_FLIGHT_NUMBER  VARCHAR2(10),
STEP4_BOOKING_CLASS  VARCHAR2(1),
STEP4_ORIGIN  VARCHAR2(10),
STEP4_DESTINATION  VARCHAR2(10),
STEP4_TICKET_NUMBER  VARCHAR2(15),
STEP5_COMPANY  VARCHAR2(10),
STEP5_FLIGHT_DATE  VARCHAR2(21),
STEP5_FLIGHT_NUMBER  VARCHAR2(10),
STEP5_BOOKING_CLASS  VARCHAR2(1),
STEP5_ORIGIN  VARCHAR2(10),
STEP5_DESTINATION  VARCHAR2(10),
STEP5_TICKET_NUMBER  VARCHAR2(15),
STEP6_COMPANY  VARCHAR2(10),
STEP6_FLIGHT_DATE  VARCHAR2(21),
STEP6_FLIGHT_NUMBER  VARCHAR2(10),
STEP6_BOOKING_CLASS  VARCHAR2(1),
STEP6_ORIGIN  VARCHAR2(10),
STEP6_DESTINATION  VARCHAR2(10),
STEP6_TICKET_NUMBER  VARCHAR2(15),
STEP7_COMPANY  VARCHAR2(10),
STEP7_FLIGHT_DATE  VARCHAR2(21),
STEP7_FLIGHT_NUMBER  VARCHAR2(10),
STEP7_BOOKING_CLASS  VARCHAR2(1),
STEP7_ORIGIN  VARCHAR2(10),
STEP7_DESTINATION  VARCHAR2(10),
STEP7_TICKET_NUMBER  VARCHAR2(15),
STEP8_COMPANY  VARCHAR2(10),
STEP8_FLIGHT_DATE  VARCHAR2(21),
STEP8_FLIGHT_NUMBER  VARCHAR2(10),
STEP8_BOOKING_CLASS  VARCHAR2(1),
STEP8_ORIGIN  VARCHAR2(10),
STEP8_DESTINATION  VARCHAR2(10),
STEP8_TICKET_NUMBER  VARCHAR2(15),
ENTRY_TYPE  VARCHAR2(1),
PARTNER_RESERVATION_NUMBER  VARCHAR2(50),
CERTIFICATE_EXPLANATION  VARCHAR2(2000),
CHECKIN_DATE  VARCHAR2(21),
CHECKOUT_DATE  VARCHAR2(21),
PARTNER_BRANCH_NAME  VARCHAR2(50),
VALID_UNTIL  VARCHAR2(21),
ISSUE_COUNT  VARCHAR2(22),
PARTNER_BRANCH_EXPL  VARCHAR2(255),
FINANCE_TRANSACTION_SEQ  VARCHAR2(22),
ISSUE_COUNT_CHILD  VARCHAR2(22),
ISSUE_COUNT_INFANT  VARCHAR2(22),
SERVICE_CHARGE  VARCHAR2(22),
NUMBER_OF_DAYS  VARCHAR2(22),
REDEPOSITED_POINTS  VARCHAR2(22),
ACCOUNTING_SEQ  VARCHAR2(22),
ACCOUNTING_REDEPOSIT_SEQ  VARCHAR2(22),
PNR  VARCHAR2(6),
CLIENT_UNIQUE_IDENTIFIER  VARCHAR2(50),
RTA_SERIAL  VARCHAR2(10),
REDEMPTION_CHANNEL  VARCHAR2(10),
CANCEL_REASON_CODE  VARCHAR2(22),
INVOICED  VARCHAR2(1),
INVOICED_DATE  VARCHAR2(21),
REF_ACT_SEQ  VARCHAR2(22),
FEE_AWD_SEQ  VARCHAR2(22),
ISSUING_CITY_CODE  VARCHAR2(9),
ISSUING_AGENT_INITIALS  VARCHAR2(2),
AWARD_CREDIT  VARCHAR2(22),
REDEPOSITED_AWARD_CREDIT  VARCHAR2(22),
CASH_AMOUNT  VARCHAR2(22),
HOTEL_SERVICE_TYPE  VARCHAR2(10),
CAR_CLASS_TYPE  VARCHAR2(10),
MIGRATION_REFERENCE  VARCHAR2(20),
ISSUING_OFFICE_ID  VARCHAR2(30),
FARE_BASIS  VARCHAR2(6),
REDEPOSITED_BY  VARCHAR2(50),
AWARD_CERTIFICATE_NO  VARCHAR2(30),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
BILLING_AMOUNT  VARCHAR2(22),
BILLING_CURRENCY  VARCHAR2(3),
BILLING_COEFFICIENT  VARCHAR2(22),
BILLING_PARTNER_CODE  VARCHAR2(10)
);
--------------------------------
CREATE TABLE MEMBER_AWD_USERS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MEMBER_AWD_USERS_SEQ  VARCHAR2(22),
MEMBER_AWD_ID  VARCHAR2(22),
NAME  VARCHAR2(100),
SURNAME  VARCHAR2(100),
BIRTH_DATE  VARCHAR2(21),
SOCIAL_SECURITY_NUMBER  VARCHAR2(50),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE FINANCE_TRANSACTIONS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
FINANCE_TRANSACTION_ISN  VARCHAR2(22),
TRANSACTION_DATE  VARCHAR2(21),
AMOUNT  VARCHAR2(22),
CURRENCY  VARCHAR2(3),
MEMBER_ID  VARCHAR2(16),
STATUS  VARCHAR2(2),
USERNAME  VARCHAR2(50),
TOTALRESPONSECODE  VARCHAR2(50),
PRINTDATA  VARCHAR2(50),
ERRORNR  VARCHAR2(50),
ERRORTEXT  VARCHAR2(255),
AUTHORISATIONCODE  VARCHAR2(50),
PAYMENT_MODE  VARCHAR2(2),
TRANSACTION_TYPE  VARCHAR2(50),
TRANSACTION_EXPLANATION  VARCHAR2(255),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
REDEPOSIT_REASON  VARCHAR2(22),
REDEPOSITED_AMOUNT  VARCHAR2(22),
REDEPOSIT_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE PARTNERS_RETRO_CLAIMS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
FLYER_ID  VARCHAR2(20),
TICKET_NUMBER  VARCHAR2(13),
FLIGHT_NUMBER  VARCHAR2(7),
FLIGHT_DATE  VARCHAR2(21),
FLIGHT_CLASS  VARCHAR2(1),
ORIGIN  VARCHAR2(25),
DESTINATION  VARCHAR2(25),
ENTRY_DATE  VARCHAR2(21),
STATUS  VARCHAR2(2),
LAST_PROCESS_DATE  VARCHAR2(21),
PNR  VARCHAR2(20),
BOOKING_DATE  VARCHAR2(21),
BOOKING_OFFICE_ID  VARCHAR2(20),
FARE_BASIS  VARCHAR2(20),
COUPON_REVENUE  VARCHAR2(22),
EXPLANATION  VARCHAR2(255),
COMPANY  VARCHAR2(10),
LOCATION  VARCHAR2(30),
COMPANY_CLASSIFICATION  VARCHAR2(10),
SEAT  VARCHAR2(4),
CUT_DATE  VARCHAR2(21),
STATEMENT_STATUS  VARCHAR2(2),
RC_SEQ  VARCHAR2(22),
NAME  VARCHAR2(50),
SURNAME  VARCHAR2(50),
PROOF_OF_ACTIVITY  VARCHAR2(50),
PARTNER_SEQ  VARCHAR2(32),
MILES  VARCHAR2(22),
POINTS  VARCHAR2(22),
RESPONSE_STATUS_CODE  VARCHAR2(3),
PARTNER  VARCHAR2(10),
RESPONSE_SENT_STATUS  VARCHAR2(3),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
NAME_AS_TICKET  VARCHAR2(100),
NAME_CHECK_OVERRIDE  VARCHAR2(1)
);
--------------------------------
CREATE TABLE RETRO_CLAIMS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
FLYER_ID  VARCHAR2(16),
TICKET_NUMBER  VARCHAR2(13),
FLIGHT_NUMBER  VARCHAR2(7),
FLIGHT_DATE  VARCHAR2(21),
FLIGHT_CLASS  VARCHAR2(1),
ORIGIN  VARCHAR2(25),
DESTINATION  VARCHAR2(25),
ENTRY_DATE  VARCHAR2(21),
STATUS  VARCHAR2(2),
LAST_PROCESS_DATE  VARCHAR2(21),
PNR  VARCHAR2(20),
BOOKING_DATE  VARCHAR2(21),
BOOKING_OFFICE_ID  VARCHAR2(20),
FARE_BASIS  VARCHAR2(50),
COUPON_REVENUE  VARCHAR2(22),
EXPLANATION  VARCHAR2(4000),
COMPANY  VARCHAR2(10),
LOCATION  VARCHAR2(30),
COMPANY_CLASSIFICATION  VARCHAR2(10),
SEAT  VARCHAR2(4),
CUT_DATE  VARCHAR2(21),
STATEMENT_STATUS  VARCHAR2(2),
RC_SEQ  VARCHAR2(22),
NAME  VARCHAR2(50),
SURNAME  VARCHAR2(50),
PROOF_OF_ACTIVITY  VARCHAR2(50),
PARTNER_SEQ  VARCHAR2(32),
MILES  VARCHAR2(22),
POINTS  VARCHAR2(22),
RESPONSE_STATUS_CODE  VARCHAR2(3),
PARTNER  VARCHAR2(10),
RESPONSE_SENT_STATUS  VARCHAR2(3),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21),
BILLING_BASE  VARCHAR2(20),
BILLING_BONUS  VARCHAR2(20),
COUPON_NUMBER  VARCHAR2(1),
BUFFER_ACT_SEQ  VARCHAR2(22),
REJECTED_BY  VARCHAR2(20),
REMARK  VARCHAR2(4000),
NAME_AS_TICKET  VARCHAR2(100),
BOARDING_NUMBER  VARCHAR2(3),
FLOWN_CLASS  VARCHAR2(1),
CHANNEL  VARCHAR2(50),
CABIN_CLASS  VARCHAR2(1),
REJECTED_REASON  VARCHAR2(255)
);
--------------------------------
CREATE TABLE BONUS_ACTS ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
BONUS_ACTS_SEQ  VARCHAR2(22),
ACT_SEQ  VARCHAR2(22),
RULE_ID  VARCHAR2(22),
MILES  VARCHAR2(22),
POINTS  VARCHAR2(22),
FLT_COUNT  VARCHAR2(22),
TPM  VARCHAR2(22),
INSERTED_BY  VARCHAR2(20),
INSERT_DATE  VARCHAR2(21),
AMENDED_BY  VARCHAR2(20),
AMEND_DATE  VARCHAR2(21)
);
--------------------------------
CREATE TABLE BALANCE ( 
ACTION_TYPE  VARCHAR2(1),
RECORD_SEQ  VARCHAR2(22),
MEMBER_ID  VARCHAR2(20),
AWARD_MILES  VARCHAR2(22),
QUALIFYING_MILES  VARCHAR2(22),
QUALIFYING_SECTORS  VARCHAR2(22)
);
--------------------------------
CREATE TABLE LP_ATTACHMENTS ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(255),
NOTE_INDEX  VARCHAR2(10),
FILENAME  VARCHAR2(255),
UNIQUE_FILENAME  VARCHAR2(255),
PATH  VARCHAR2(255),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_MEMBER_VERIFICATIONS ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(25),
VERIFICATION_TYPE  VARCHAR2(20),
VERIFICATION_STATUS  VARCHAR2(20),
EXPIRY_DATE  VARCHAR2(10),
VALIDATE_KEY  VARCHAR2(40),
SEQUENCE  VARCHAR2(10),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_COMMUNICATION ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(25),
NOTE_INDEX  VARCHAR2(10),
OPEN_DATE  VARCHAR2(10),
CLOSE_DATE  VARCHAR2(10),
STATUS  VARCHAR2(20),
ORIGIN  VARCHAR2(60),
MAIN_CATEGORY  VARCHAR2(50),
SUB_CATEGORY  VARCHAR2(50),
SHORT_DESCRIPTION  VARCHAR2(80),
NOTE  VARCHAR2(1024),
PRIORITY  VARCHAR2(10),
ATTACHMENT_AVAILABLE  VARCHAR2(1),
MESSAGE_TYPE  VARCHAR2(50),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_MEMBER_EXPIRY ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(25),
EXPIRY_DATE  VARCHAR2(10),
EXPIRED_MILES  VARCHAR2(10),
STATEMENT_DATE  VARCHAR2(10),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_STATEMENTS ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(25),
STATEMENT_DATE  VARCHAR2(10),
PREVIOUS_STATEMENT_DATE  VARCHAR2(10),
OPENING_BALANCE  VARCHAR2(10),
BASE_MILES_STATEMENT_PERIOD  VARCHAR2(10),
BONUS_MILES_STATEMENT_PERIOD  VARCHAR2(10),
REDEMPTION_MILES_STATEMENT_PERIOD  VARCHAR2(10),
EXPIRED_MILES_STATEMENT_PERIOD  VARCHAR2(10),
CLOSING_BALANCE  VARCHAR2(10),
CURRENT_TIER  VARCHAR2(4),
ACCOUNT_STATUS  VARCHAR2(4),
PRINT/SEND_STATUS  VARCHAR2(4),
TIER_MILES_OPENING_BALANCE  VARCHAR2(10),
TIER_MILES_ADDED  VARCHAR2(10),
TIER_MILES_REMOVED  VARCHAR2(10),
TIER_MILES_CLOSING_BALANCE  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_STATEMENT_FUTURE_EXPIRY ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER  VARCHAR2(25),
STATEMENT_DATE  VARCHAR2(10),
EXPIRY_DATE  VARCHAR2(10),
UNITS_TO_EXPIRY  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_FAMILY_POOL_HEAD ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER_HEAD  VARCHAR2(25),
BEGIN_DATE  VARCHAR2(10),
END_DATE  VARCHAR2(10),
ACTIVATION_DATE  VARCHAR2(20),
POOL_STATUS  VARCHAR2(25),
POOL_SPLIT_HEAD  VARCHAR2(10),
POOL_SPLIT_MEMBER  VARCHAR2(10),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_FAMILY_POOL_DETAILS ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER_HEAD  VARCHAR2(25),
MEMBERSHIP_NUMBER_MEMBER  VARCHAR2(25),
BEGIN_DATE  VARCHAR2(10),
END_DATE  VARCHAR2(10),
RECORD_STATUS  VARCHAR2(25),
RELATIONSHIP  VARCHAR2(25),
LINK_STATUS  VARCHAR2(25),
LINK_REQUEST  VARCHAR2(25),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_FAMILY_POOL_ACCEPTANCE ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER_HEAD  VARCHAR2(25),
MEMBERSHIP_NUMBER_MEMBER  VARCHAR2(25),
MEMBERSHIP_NUMBER_APPROVE  VARCHAR2(25),
CREATION_DATE  VARCHAR2(20),
APPROVAL_DATE  VARCHAR2(20),
REJECTION_DATE  VARCHAR2(20),
PREVIOUS_POOL_STATUS  VARCHAR2(25),
DISSOLVED_  VARCHAR2(25),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_FAMILY_POOL_LOG ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NUMBER_HEAD  VARCHAR2(25),
MEMBERSHIP_NUMBER_MEMBER  VARCHAR2(25),
SEQUENCE  VARCHAR2(10),
ACTION  VARCHAR2(30),
LOG_ENTRY  VARCHAR2(500),
POOL_STATUS  VARCHAR2(25),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_ACCRUAL_IN_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(5),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
FILE_REFERENCE  VARCHAR2(16),
FOOT_RECORD_TYPE  VARCHAR2(2),
RECORDS  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_ACCRUAL_IN_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
HEAD  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
AIRLINE_INFO  VARCHAR2(100),
RECORD_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
MEMBERSHIP_NUMBER  VARCHAR2(20),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(60),
NAME_CHECK  VARCHAR2(1),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
MARKETING_AIRLINE  VARCHAR2(3),
MARKETING_FLIGHT_NUMBER  VARCHAR2(5),
CODESHARE  VARCHAR2(1),
DEPARTURE_DATE  VARCHAR2(10),
ARRIVAL_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
MARKETING_CLASS  VARCHAR2(2),
UPGRADE  VARCHAR2(2),
DOWNGRADE  VARCHAR2(2),
ENTITLEMENT  VARCHAR2(15),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FAREBASES  VARCHAR2(8),
SEAT  VARCHAR2(4),
RECORD_LOCATER  VARCHAR2(6),
UPDATE_CODE  VARCHAR2(1),
BASE_MILES  VARCHAR2(5),
CHECKIN_SOURCE  VARCHAR2(2),
BOOKING_SOURCE  VARCHAR2(2),
OAAN  VARCHAR2(16),
IRNFFPA  VARCHAR2(16),
ACCRUAL_STATUS  VARCHAR2(2),
RC1  VARCHAR2(3),
RC2  VARCHAR2(3),
RC3  VARCHAR2(3),
RC4  VARCHAR2(3),
RC5  VARCHAR2(3),
RC6  VARCHAR2(3),
MEMBER_TIER  VARCHAR2(2),
GENDER  VARCHAR2(1),
CREATED_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_ACCRUAL_OUT_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(5),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
FILE_REFERENCE  VARCHAR2(16),
DETAIL_RECORD_TYPE  VARCHAR2(2),
RECORDS  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_ACCRUAL_OUT_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
HEAD  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
AIRLINE_INFO  VARCHAR2(100),
RECORD_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
MEMBERSHIP_NUMBER  VARCHAR2(20),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(60),
NAME_CHECK  VARCHAR2(1),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
MARKETING_AIRLINE  VARCHAR2(3),
MARKETING_FLIGHT_NUMBER  VARCHAR2(5),
CODESHARE  VARCHAR2(1),
DEPARTURE_DATE  VARCHAR2(10),
ARRIVAL_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
MARKETING_CLASS  VARCHAR2(2),
UPGRADE  VARCHAR2(2),
DOWNGRADE  VARCHAR2(2),
ENTITLEMENT  VARCHAR2(15),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FAREBASES  VARCHAR2(8),
SEAT  VARCHAR2(4),
RECORD_LOCATER  VARCHAR2(6),
UPDATE_CODE  VARCHAR2(1),
BASE_MILES  VARCHAR2(5),
CHECKIN_SOURCE  VARCHAR2(2),
BOOKING_SOURCE  VARCHAR2(2),
OAAN  VARCHAR2(16),
IRNFFPA  VARCHAR2(16),
ACCRUAL_STATUS  VARCHAR2(2),
RC1  VARCHAR2(3),
RC2  VARCHAR2(3),
RC3  VARCHAR2(3),
RC4  VARCHAR2(3),
RC5  VARCHAR2(3),
RC6  VARCHAR2(3),
MEMBER_TIER  VARCHAR2(2),
GENDER  VARCHAR2(1),
CREATED_DATE  VARCHAR2(20),
DATE_RECEIVED  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_RETRO_IN_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(5),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
FILE_REFERENCE  VARCHAR2(16),
DETAIL_RECORD_TYPE  VARCHAR2(2),
RECORDS  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_RETRO_IN_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
HEAD  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
AIRLINE_INFO  VARCHAR2(100),
RECORD_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
MEMBERSHIP_NUMBER  VARCHAR2(20),
TICKETED_NAME  VARCHAR2(60),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(50),
NAME_CHECK  VARCHAR2(1),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
MARKETING_AIRLINE  VARCHAR2(3),
MARKETING_FLIGHT_NUMBER  VARCHAR2(5),
DEPARTURE_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
MARKETING_CLASS  VARCHAR2(2),
UPGRADE  VARCHAR2(2),
DOWNGRADE  VARCHAR2(2),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FAREBASES  VARCHAR2(8),
SEAT  VARCHAR2(4),
BOARDING  VARCHAR2(3),
BASE_MILES  VARCHAR2(5),
RETRO_AUTH  VARCHAR2(2),
RC1  VARCHAR2(3),
RC2  VARCHAR2(3),
RC3  VARCHAR2(3),
RC4  VARCHAR2(3),
RC5  VARCHAR2(3),
RC6  VARCHAR2(3),
CREDITING_SOURCE_TYPE  VARCHAR2(2),
IRNFFPA  VARCHAR2(16),
OAAN  VARCHAR2(16),
MEMBER_TIER  VARCHAR2(2),
GENDER  VARCHAR2(1),
ADDITIONAL_SEGMENT  VARCHAR2(2),
IRREGULAR_OPERATIONS  VARCHAR2(1),
FFP_ALREADY_CREDITED  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_RETRO_OUT_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(5),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
FILE_REFERENCE  VARCHAR2(16),
DETAIL_RECORD_TYPE  VARCHAR2(2),
RECORDS  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_RETRO_OUT_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
FILE_KEY  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
AIRLINE_INFO  VARCHAR2(100),
RECORD_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
MEMBERSHIP_NUMBER  VARCHAR2(20),
TICKETED_NAME  VARCHAR2(60),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(50),
NAME_CHECK  VARCHAR2(1),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
MARKETING_AIRLINE  VARCHAR2(3),
MARKETING_FLIGHT_NUMBER  VARCHAR2(5),
DEPARTURE_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
MARKETING_CLASS  VARCHAR2(2),
UPGRADE  VARCHAR2(2),
DOWNGRADE  VARCHAR2(2),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FAREBASES  VARCHAR2(8),
SEAT  VARCHAR2(4),
BOARDING  VARCHAR2(3),
BASE_MILES  VARCHAR2(5),
RETRO_AUTH  VARCHAR2(2),
RC1  VARCHAR2(3),
RC2  VARCHAR2(3),
RC3  VARCHAR2(3),
RC4  VARCHAR2(3),
RC5  VARCHAR2(3),
RC6  VARCHAR2(3),
CREDITING_SOURCE_TYPE  VARCHAR2(2),
IRNFFPA  VARCHAR2(16),
OAAN  VARCHAR2(16),
MEMBER_TIER  VARCHAR2(2),
GENDER  VARCHAR2(1),
ADDITIONAL_SEGMENT  VARCHAR2(2),
IRREGULAR_OPERATIONS  VARCHAR2(1),
FFP_ALREADY_CREDITED  VARCHAR2(3),
CREATED_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_BILLING_IN_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
DETAIL_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(4),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
START_DATE  VARCHAR2(10),
END_DATE  VARCHAR2(10),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
ISO_CURRENCY_CODE  VARCHAR2(3),
RECORDS  VARCHAR2(9),
BILLING_AMOUNT  VARCHAR2(18),
TOTAL_BASE_MILES  VARCHAR2(9),
TOTAL_PROMOTIONAL_MILES  VARCHAR2(9),
TOTAL_TIER_MILES  VARCHAR2(9)
);
--------------------------------
CREATE TABLE LP_BILLING_IN_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
HEAD  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
RECORD_TYPE  VARCHAR2(2),
TRANSACTION_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
CREDITING_SOURCE  VARCHAR2(2),
IRNFFPA  VARCHAR2(16),
OAAN  VARCHAR2(16),
POSTED_DATE  VARCHAR2(10),
MEMBERSHIP_NUMBER  VARCHAR2(20),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(50),
TICKETED_NAME  VARCHAR2(60),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
DEPARTURE_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FLOWN_MILES  VARCHAR2(5),
BASE_MILES  VARCHAR2(5),
SERVICE_CALSS_MILES  VARCHAR2(5),
PROMOTIONAL_MILES  VARCHAR2(5),
PROMOTION_CODE_  VARCHAR2(15),
PROMOTION_NAME  VARCHAR2(60),
STATUS_MILES  VARCHAR2(5),
TOTAL_MILES_  VARCHAR2(5),
RATE_OF_MILES  VARCHAR2(10),
FLAT_RATE  VARCHAR2(14),
CREDIT_OR_DEBIT  VARCHAR2(1),
TOTAL_CHARGE  VARCHAR2(14),
RESPONSE_CODE_1  VARCHAR2(3),
RESPONSE_CODE_2  VARCHAR2(3),
MEMBER_TIER  VARCHAR2(2),
TIER_PERCENTAGE  VARCHAR2(3),
AIRLINE_INFO  VARCHAR2(95),
CREATED_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_BILLING_OUT_HEADER ( 
RECORD_SEQ  VARCHAR2(22),
FILE_KEY  VARCHAR2(10),
PARTNER  VARCHAR2(4),
STATUS  VARCHAR2(10),
HEADER_RECORD_TYPE  VARCHAR2(2),
DETAIL_RECORD_TYPE  VARCHAR2(2),
FILE_TYPE  VARCHAR2(2),
SEQUENCE  VARCHAR2(4),
FROM_SYSTEM  VARCHAR2(3),
FROM_AIRLINE  VARCHAR2(3),
TO_AIRLINE  VARCHAR2(3),
START_DATE  VARCHAR2(10),
END_DATE  VARCHAR2(10),
CREATED_DATE  VARCHAR2(20),
VERSION  VARCHAR2(2),
ISO_CURRENCY_CODE  VARCHAR2(3),
RECORDS  VARCHAR2(9),
BILLING_AMOUNT  VARCHAR2(18),
TOTAL_BASE_MILES  VARCHAR2(9),
TOTAL_PROMOTIONAL_MILES  VARCHAR2(9),
TOTAL_TIER_MILES  VARCHAR2(9)
);
--------------------------------
CREATE TABLE LP_BILLING_OUT_RECORD ( 
RECORD_SEQ  VARCHAR2(22),
PARTNER  VARCHAR2(25),
HEAD  VARCHAR2(10),
STATUS  VARCHAR2(10),
ERRORS  VARCHAR2(300),
RECORD_TYPE  VARCHAR2(2),
TRANSACTION_TYPE  VARCHAR2(2),
FFP_PROGRAM  VARCHAR2(3),
CREDITING_SOURCE  VARCHAR2(2),
OAAN  VARCHAR2(16),
IRNFFPA  VARCHAR2(16),
POSTED_DATE  VARCHAR2(10),
MEMBERSHIP_NUMBER  VARCHAR2(20),
SURNAME  VARCHAR2(30),
FIRSTNAME  VARCHAR2(50),
TICKETED_NAME  VARCHAR2(60),
OPERATING_AIRLINE  VARCHAR2(3),
OPERATING_FLIGHT_NUMBER  VARCHAR2(5),
DEPARTURE_DATE  VARCHAR2(10),
ORIGIN  VARCHAR2(5),
DESTINATION  VARCHAR2(5),
OPERATING_CLASS  VARCHAR2(2),
FLOWN_CLASS  VARCHAR2(2),
CREDITED_CLASS  VARCHAR2(2),
TICKET  VARCHAR2(13),
COUPON  VARCHAR2(2),
FLOWN_MILES  VARCHAR2(5),
BASE_MILES  VARCHAR2(5),
SERVICE_CALSS_MILES  VARCHAR2(5),
PROMOTIONAL_MILES  VARCHAR2(5),
PROMOTION_CODE_  VARCHAR2(15),
PROMOTION_NAME  VARCHAR2(60),
STATUS_MILES  VARCHAR2(5),
TOTAL_MILES_  VARCHAR2(5),
RATE_OF_MILES  VARCHAR2(10),
FLAT_RATE  VARCHAR2(14),
CREDIT_OR_DEBIT  VARCHAR2(1),
TOTAL_CHARGE  VARCHAR2(14),
RESPONSE_CODE_1  VARCHAR2(3),
RESPONSE_CODE_2  VARCHAR2(3),
MEMBER_TIER  VARCHAR2(2),
TIER_PERCENTAGE  VARCHAR2(3),
AIRLINE_INFO  VARCHAR2(25),
CREATED_DATE  VARCHAR2(20)
);
--------------------------------
CREATE TABLE LP_RESERVATIONS ( 
RECORD_SEQ  VARCHAR2(22),
DEPARTURE_DATE  VARCHAR2(10),
FLIGHT_NUMBER  VARCHAR2(5),
RECORD_LOCATER  VARCHAR2(12),
TICKET_NUMBER  VARCHAR2(20),
COUPON_NUMBER  VARCHAR2(10),
PAX_NAME  VARCHAR2(60),
CARRIER  VARCHAR2(4),
AGENT  VARCHAR2(30),
STATUS  VARCHAR2(4),
ORIGIN  VARCHAR2(4),
DESTINATION  VARCHAR2(4),
BOOKING_CLASS  VARCHAR2(2),
NAME  VARCHAR2(50),
SURNAME  VARCHAR2(50),
CREATION_DATE  VARCHAR2(20),
MEMBERSHIP_NR  VARCHAR2(20),
FFP_CARRIER  VARCHAR2(4),
REDEMPTION_FFP_CARRIER  VARCHAR2(4),
UPGRADE_FROM_CLASS  VARCHAR2(4),
RDEMPTION_MEMBERSHIP_NR  VARCHAR2(20),
CERTIFICATE  VARCHAR2(20),
REDEMPTION_TYPE  VARCHAR2(4),
TICKET_CARRIER  VARCHAR2(4),
CODESHARE_CARRIER  VARCHAR2(4),
CODESHARE_FLIGHT_NUMBER  VARCHAR2(4),
CODESHARE_CLASS  VARCHAR2(4),
DEPARTURE_TIME  VARCHAR2(6),
ARRIVAL_TIME  VARCHAR2(6),
DATE_CHANGE  VARCHAR2(10),
ROW_NUMBER  VARCHAR2(10),
BOOKING_DATE  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_ACCRUAL_EXPIRY_MAP ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NR  VARCHAR2(25),
RECOD_SEQ  VARCHAR2(10),
TRANSACTION_REFERENCE  VARCHAR2(10),
EXPIRY_DATE  VARCHAR2(10),
REVERSED  VARCHAR2(1),
BASE_UNITS  VARCHAR2(10),
BONUS_UNITS_  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_REDEMPTION_EXPIRY_MAP ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NR  VARCHAR2(25),
RECOD_SEQ  VARCHAR2(10),
TRANSACTION_REFERENCE  VARCHAR2(10),
EXPIRY_DATE  VARCHAR2(10),
USED_UNITS  VARCHAR2(10)
);
--------------------------------
CREATE TABLE LP_EXPIRY_EXTEND_REINSTATE ( 
RECORD_SEQ  VARCHAR2(22),
MEMBERSHIP_NR  VARCHAR2(25),
RECOD_SEQ  VARCHAR2(10),
OLD_EXP_DATE  VARCHAR2(10),
NEW_EXPIRY_DATE  VARCHAR2(10),
MILES_EXTENDED  VARCHAR2(10),
EXTENTION_TYPE  VARCHAR2(4),
TRANSACTION_REFERENCE  VARCHAR2(10),
PAYMENT_REFERENCE  VARCHAR2(10),
LAST_UPDATE_BY  VARCHAR2(25),
LAST_UPDATE_ON  VARCHAR2(20)
);






